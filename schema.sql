CREATE TABLE IF NOT EXISTS users (
	id SERIAL PRIMARY KEY,
	created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
	username VARCHAR(30) UNIQUE NOT NULL,
	bio VARCHAR(400) NOT NULL DEFAULT '\',
	avatar VARCHAR(200) NOT NULL DEFAULT '\',
	email VARCHAR(40) NOT NULL,
	password VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS posts (
	id SERIAL PRIMARY KEY,
	created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
	url VARCHAR(200) NOT NULL,
	caption VARCHAR(240) NOT NULL,
	userId INTEGER NOT NULL
);

CREATE TABLE comments (
	id SERIAL PRIMARY KEY,
	created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
	contents VARCHAR(240) NOT NULL,
	userId INTEGER NOT NULL,
	postId INTEGER NOT NULL
);

CREATE TABLE postLikes (
	id SERIAL PRIMARY KEY,
	created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
	userId INTEGER NOT NULL UNIQUE,
	postId INTEGER NOT NULL
);

CREATE TABLE commentLikes (
	id SERIAL PRIMARY KEY,
	created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
	userId INTEGER NOT NULL UNIQUE,
	commentId INTEGER NOT NULL
);


CREATE TABLE hashtags (
	id SERIAL PRIMARY KEY,
	created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
	title VARCHAR(20) NOT NULL UNIQUE
);


CREATE TABLE followers (
	id SERIAL PRIMARY KEY,
	created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
	leaderId INTEGER NOT NULL,
	followerId INTEGER NOT NULL
);